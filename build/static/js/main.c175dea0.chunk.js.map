{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","config.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","API","detailRoute","App","showAddTask","setShowAddTask","setTasks","useEffect","getTasks","a","fetchTasks","tasksFromServer","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","element","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c175dea0.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    return <button onClick={onClick} style={{ backgroundColor: color }}\r\n        className='btn' >\r\n        { text }\r\n    </button>\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\nexport default Button","import { useLocation } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    const location = useLocation()\r\n\r\n        return (\r\n            <header className='header'>\r\n                <h1> {title} </h1>\r\n                {location.pathname === '/' && (\r\n                <Button color={showAdd ? 'red' : 'green '}\r\n                    text={showAdd ? 'Close' : 'Add '}\r\n                    onClick={onAdd}\r\n                />\r\n                )}\r\n            </header>\r\n        )\r\n}\r\n\r\nHeader.defaultProps = {\r\n\r\n    title: 'Task Tracker', \r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : '' } ` }\r\n            onDoubleClick={ () =>\r\n            onToggle(task.id)} >\r\n            <h3> {task.text}{' '}\r\n                < FaTimes style={{\r\n                color:\r\n                    'red', cursor: 'pointer'\r\n            }}\r\n                onClick={() => onDelete(task.id)}\r\n                />\r\n            </ h3>\r\n\r\n            <p>\r\n                { task.day}\r\n\r\n            </p>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Task","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n\treturn (\r\n\t\ttasks.map((task, index) => (\r\n\t\t\t<Task key={index}\r\n\t\t\t\ttask={task}\r\n\t\t\t\tonDelete={onDelete}\r\n\t\t\t\tonToggle={onToggle} />\r\n\t\t\t))\r\n\t\t)\t\r\n}\r\n\r\nexport default Tasks","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd } ) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!text) {\r\n            alert(\"Please add a task\")\r\n            return\r\n        }\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add Task'\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type='datetime-local' placeholder='Add Day & Time'\r\n                    value={day}\r\n                    onChange={(e) => setDay(e.target.value)} />\r\n            </div>\r\n\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox'\r\n                    checked={reminder}\r\n                    value={reminder}\r\n                    onChange={(e) => setReminder(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task' className='btn btn-block' />\r\n\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n\r\n","import { Link } from 'react-router-dom'\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p> Copyright &copy; 2021</p>\r\n            <Link to=\"/about\"> About </Link>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4> Version 1.0.0 </h4>\r\n            <Link to='/'>Go Back</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","export const API = {\r\n    \"BASE_API\": \"http://127.0.0.1:8000/api/tasks/\",\r\n   // \"POST\": detailRoute\r\n \r\n}\r\n\r\nexport const detailRoute = (id) => {\r\n    return API.BASE_API + `${id}/`\r\n}\r\n\r\n","\r\nimport { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route , Routes} from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask'\r\nimport Footer from './components/Footer'\r\nimport About from './components/About'\r\nimport { API, detailRoute } from './config'\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n\tconst [showAddTask, setShowAddTask] = useState (true)\r\n\tconst [tasks, setTasks] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getTasks = async () => {\r\n\t\t\tconst tasksFromServer = await fetchTasks()\r\n\t\t\tsetTasks(tasksFromServer)\r\n\t\t}\r\n\r\n\t\tgetTasks()\r\n\r\n\t}, [])\r\n\r\n\t//Fetch task\r\n\tconst fetchTasks = async () => {\r\n\t\t\tconst res = await fetch(API.BASE_API)\r\n\t\t\tconst data = await res.json()\r\n\r\n\t\t\treturn data\r\n\t}\r\n\r\n\t//Fetch task with id \r\n\tconst fetchTask = async (id) => {\r\n\r\n\t\tconst res = await fetch(detailRoute(id))\r\n\t\tconst data = await res.json()\r\n\r\n\t\treturn data\r\n\t}\r\n    \r\n\t//Add Task\r\n\tconst addTask = async (task) => {\r\n\t\tconst res = await fetch(API.BASE_API, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type' : 'application/json'\r\n\t\t\t},\r\n\r\n\t\t\tbody: JSON.stringify(task)\r\n\t\t})\r\n\r\n\t\tconst data = await res.json()\r\n\r\n\t\tsetTasks([...tasks, data])\r\n\r\n\r\n    }\r\n\r\n\t// Delete task\r\n\tconst deleteTask = async (id) => {\r\n\t\tawait fetch(detailRoute(id), {\r\n\t\t\tmethod: 'DELETE', \r\n        })\r\n\t\tsetTasks(tasks.filter((task) => task.id !== id ))}\r\n\r\n\t// Toggle Reminder\r\n\tconst toggleReminder = async (id) => {\r\n\t\tconst taskToToggle = await fetchTask(id)\r\n\t\tconst updTask = {\r\n\t\t\t...taskToToggle,\r\n\t\t\treminder: !taskToToggle.reminder\r\n\t\t}\r\n\t\tconst res = await fetch(detailRoute(id), {\r\n\t\t\tmethod: 'PUT',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(updTask),\r\n\t\t})\r\n\r\n\t\tconst data = await res.json()\r\n\r\n\t\tsetTasks(\r\n\t\t\ttasks.map((task) =>\r\n\t\t\ttask.id === id ?\r\n\t\t\t{ ...task, reminder: data.reminder } : task\r\n\t\t\t))\r\n\r\n\t}\r\n\treturn (\r\n\t  <Router>\r\n\t\t  <div className=\"container\">\r\n\t\t\t\t<Header\r\n\t\t\t\t\tonAdd={() => setShowAddTask (!showAddTask)} showAdd={showAddTask}\r\n\t\t\t\t/>\r\n\t\t\t\t<Routes>\r\n\t\t\t\t\t<Route path='/' exact element={(\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t{showAddTask && <AddTask onAdd={addTask} />}\r\n\t\t\t\t\t\t{tasks.length > 0 ? (<Tasks tasks={tasks}\r\n\t\t\t\t\t\t\tonDelete={deleteTask}\r\n\t\t\t\t\t\t\tonToggle={toggleReminder} />)\r\n\t\t\t\t\t\t\t: ('No Tasks to Show')}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route path='/about' element={<About/>} />\r\n\t\t\t\t</Routes>\r\n\t\t\t  <Footer />\r\n\t\t\t</div>\r\n\t\t</Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n        <App />\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}